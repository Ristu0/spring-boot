<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baizhi.dao.PersonDao">
    <!-- Person的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Person_Map" type="com.baizhi.entity.Person">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="age" property="age" />
        <result column="salary" property="salary" />
    </resultMap>

    <!-- 数据库中表名为:t_person的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_person_Column">
        t_person.id as id
        ,t_person.name as name
        ,t_person.age as age
        ,t_person.salary as salary
    </sql>

    <!--获得类名为:Person对应的数据库表的数据总行数 -->
    <select id="getPersonRowCount" resultType="java.lang.Long">
        select count(id) from t_person
    </select>
    <!-- 获得类名为:Person对应数据库中表的数据集合 -->
    <select id="selectPerson" resultMap="result_Person_Map">
        select 
        <include refid="t_person_Column" /> 
        from t_person
    </select> 

    <!-- 获得一个Person对象,以参数Person对象中不为空的属性作为条件进行查询-->
    <select id="selectPersonByObj" parameterType="com.baizhi.entity.Person" resultMap="result_Person_Map">
        select 
            <include refid="t_person_Column" /> 
        from t_person
        <where>
            <if test="salary != null "> and t_person.salary = #{salary}</if>
            <if test="age != null "> and t_person.age = #{age}</if>
            <if test="name != null "> and t_person.name = #{name}</if>
            <if test="id != null "> and t_person.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Person的id获得对应数据库中表的数据对象-->
    <select id="selectPersonById" parameterType="java.lang.Integer" resultMap="result_Person_Map">
        select 
            <include refid="t_person_Column" /> 
        from t_person
        where t_person.id = #{id}
    </select> 

    <!-- 将Person插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertPerson" parameterType="com.baizhi.entity.Person">
        insert into t_person(id,name,age,salary) 
        values(#{id},#{name},#{age},#{salary})
    </insert>

    <!-- 将Person中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyPerson" parameterType="com.baizhi.entity.Person">
        insert into t_person
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null">name,</if>
            <if test="age != null">age,</if>
            <if test="salary != null">salary,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="name != null"> #{name},</if>
            <if test="age != null"> #{age},</if>
            <if test="salary != null"> #{salary},</if>
        </trim>
    </insert>

    <!-- 通过Person的id将数据库表中对应的数据删除-->
    <delete id="deletePersonById" parameterType="java.lang.Integer">
        delete from t_person
        where id = #{id}
    </delete>

    <!-- 通过Person的id将Person的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updatePersonById" parameterType="com.baizhi.entity.Person">
        update t_person set
            name=#{name}
            ,age=#{age}
            ,salary=#{salary}
        where id=#{id}
    </update>

    <!-- 通过Person的id将Person中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyPersonById" parameterType="com.baizhi.entity.Person">
        update t_person
        <set>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="age != null">
                age=#{age},
            </if>
            <if test="salary != null">
                salary=#{salary},
            </if>
        </set>
        where id=#{id}
    </update>

</mapper>